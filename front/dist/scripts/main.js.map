{"version":3,"sources":["../bower_components/autotabs/dist/js/jquery.autotabs.js","../bower_components/autotabs/dist/js/jquery.autotabs.min.js","../assets/scripts/main.js","../assets/scripts/plugins/dropit.js","../assets/scripts/plugins/jquery.bxslider.js","../assets/scripts/plugins/jquery.modal.js","../assets/scripts/plugins/jquery.scrollbox.js"],"names":["$","fn","autotabs","method","options","active_tab_index","processing","methods","init","params","extend","this","defaults","each","$this","children","tab_pane_selector","length","tab_orphans","show","ul","tabs_class","vertical","active_tab","cookie","cookie_name","Math","min","index","element","id","tab_pane_id","isFunction","attr","helpers","generate_tab","tabs","tabs_selector","replace","remove","prepend","first","click","link","parent","hasClass","active_class","force_refresh","showLoadingIcon","addClass","siblings","removeClass","slideUp","load","path","cookie_path","ex","elt","tab_id","cls","tab_class","data","label","tab_label_selector","get","innerHTML","tab_label","pane","success","getSuccess","url","trim","html","slideDown","hideLoadingIcon","call","empty","ajax","error","window","location","reload","loading_icon","hide","apply","Array","prototype","slice","arguments","jQuery","a","t","e","i","n","s","o","c","l","document","ready","dropit","hover","find","fadeIn","fadeOut","el","closest","activetab","all","next","is","allt","settings","$el","triggerParentEl","submenuEl","off","action","on","triggerEl","parents","beforeHide","afterHide","beforeShow","afterShow","afterLoad","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","slideZIndex","wrapperClass","touchEnabled","swipeThreshold","oneToOneTouch","preventDefaultSwipeX","preventDefaultSwipeY","ariaLive","ariaHidden","keyboardEnabled","pager","pagerType","pagerShortSeparator","pagerSelector","buildPager","pagerCustom","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","autoControlsCombine","autoControlsSelector","auto","pause","autoStart","autoDirection","stopAutoOnClick","autoHover","autoDelay","autoSlideForOnePage","minSlides","maxSlides","moveSlides","slideWidth","shrinkItems","onSliderLoad","onSlideBefore","onSlideAfter","onSlideNext","onSlidePrev","onSliderResize","bxSlider","slider","windowWidth","width","windowHeight","height","parseInt","floor","random","active","carousel","minThreshold","maxThreshold","working","interval","animProp","usingCSS","div","createElement","props","undefined","style","cssPrefix","toLowerCase","setup","preloadSelector","eq","wrap","viewport","loader","css","position","overflow","maxWidth","getViewportMaxWidth","margin","float","listStyle","getSlideWidth","zIndex","display","appendCaptions","last","getPagerQty","fitVids","appendControls","appendControlsAuto","appendPager","after","loadElements","start","selector","callback","total","count","one","complete","sliceAppend","clone","slicePrepend","append","setSlidePosition","getViewportHeight","redrawSlider","initialized","bind","resizeWindow","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","keydown","keyPress","currentIndex","getMoveBy","add","outerHeight","max","map","parseFloat","newElWidth","wrapWidth","ceil","getNumberSlidesShowing","slidesShowing","childWidth","pagerQty","breakPoint","counter","lastChild","lastShowingIndex","setPositionProperty","left","outerWidth","top","value","type","duration","animateObj","propValue","target","unbind","updateAfterSlideTransition","resetValue","tickerLoop","animate","populatePager","pagerHtml","linkContent","pagerEl","clickPagerBind","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","updateAutoControls","title","preventDefault","stopAuto","goToNextSlide","goToPrevSlide","startAuto","pagerLink","pagerIndex","currentTarget","goToSlide","slideIndex","len","oldIndex","state","setTimeout","focus","blur","autoPaused","transform","idx","ratio","property","newSpeed","totalDimens","startPosition","split","abs","resumeSpeed","animateProperty","reset","isOnScreen","win","scrollTop","scrollLeft","bounds","offset","right","bottom","activeElementTag","activeElement","tagName","tagFilters","p","RegExp","result","exec","keyCode","touch","x","y","end","onTouchStart","originalPos","orig","originalEvent","touchPoints","changedTouches","pageX","pageY","setPointerCapture","pointerId","onTouchMove","onTouchEnd","onPointerCancel","releasePointerCapture","xMovement","yMovement","change","distance","windowWidthNew","windowHeightNew","applyAriaHiddenAttributes","startVisibleIndex","numberOfSlidesShowing","setSlideIndex","direction","requestEl","performTransition","moveBy","filter","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideElement","getSlideCount","isWorking","destroySlider","removeAttr","unwrap","removeData","reloadSlider","current","modal","close","$body","doFade","isNaN","fadeDuration","test","$elm","open","event","elm","showSpinner","trigger","AJAX_SEND","done","AJAX_SUCCESS","CLOSE","hideSpinner","AJAX_COMPLETE","fail","AJAX_FAIL","constructor","m","block","fadeDelay","escapeClose","which","clickClose","blocker","unblock","BEFORE_BLOCK","_ctx","opacity","BLOCK","self","appendTo","BEFORE_OPEN","showClose","closeButton","closeClass","closeText","modalClass","OPEN","BEFORE_CLOSE","_this","AFTER_CLOSE","spinner","spinnerHtml","that","isActive","scrollbox","config","defConfig","linear","startDelay","delay","step","switchItems","autoPlay","onMouseOverPause","paused","queue","listElement","listItemElement","scrollOffset","containerUL","backward","forward","resetClock","scrollForward","scrollBackward","forwardHover","pauseHover","container","scrollingId","nextScrollId","curLi","newScrollOffset","scrollDistance","theStep","liLen","insertBefore","clearTimeout"],"mappings":"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","file":"main.js","sourcesContent":["!( function( $ ) {\n\t\"use strict\";\n\t$.fn.autotabs = function( method ) {\n\t\tvar options,\n\t\t\tactive_tab_index,\n\t\t\tprocessing = false;\n\n\t\tvar methods = {\n\t\t\tinit: function( params ) {\n\n\t\t\t\toptions = $.extend(\n\t\t\t\t\ttrue,\n\t\t\t\t\t{},\n\t\t\t\t\tthis.autotabs.defaults,\n\t\t\t\t\tparams\n\t\t\t\t);\n\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $this = $( this) ;\n\n\t\t\t\t\tvar children = $this.children( options.tab_pane_selector );\n\n\t\t\t\t\tif ( children.length === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (children.length === 1 && !options.tab_orphans ) {\n\t\t\t\t\t\tchildren.show();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar ul = \"<ul class='\" + options.tabs_class  + ( options.vertical ? \" vertical\" : \"\" ) + \"'>\";\n\n\t\t\t\t\tactive_tab_index = ( options.active_tab === null ?\n\t\t\t\t\t\t( $.cookie ? $.cookie( options.cookie_name ) : 0 ) :\n\t\t\t\t\t\toptions.active_tab ) || 0;\n\n\t\t\t\t\tactive_tab_index = Math.min( children.length - 1, active_tab_index );\n\n\t\t\t\t\tchildren.each(function( index, element ) {\n\t\t\t\t\t\tif ( element.id === \"\" ) {\n\t\t\t\t\t\t\tvar id = options.tab_pane_id && $.isFunction( options.tab_pane_id ) ?\n\t\t\t\t\t\t\t\toptions.tab_pane_id( index, element) :\n\t\t\t\t\t\t\t\t\"___\" + ( index + 1 );\n\n\t\t\t\t\t\t\t$( element ).attr( \"id\", id );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tul += helpers.generate_tab( index, element );\n\t\t\t\t\t});\n\n\t\t\t\t\tul += \"</ul>\";\n\n\t\t\t\t\tvar tabs = ( options.tabs_selector !== \"\" ) ? $( options.tabs_selector ) : $this;\n\n\t\t\t\t\tif ( !tabs ) { tabs = $this; }\n\n\t\t\t\t\t$( \"ul.\" + options.tabs_class.replace( /\\s/, \".\" ), tabs ).remove();\n\n\t\t\t\t\ttabs.prepend( ul );\n\n\t\t\t\t\t$( \"li > a\", tabs.children().first() ).click(function() {\n\t\t\t\t\t\tif ( processing ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar link = $( this );\n\n\t\t\t\t\t\tif ( $( this ).parent().hasClass( options.active_class ) && !options.force_refresh ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprocessing = true;\n\n\t\t\t\t\t\thelpers.showLoadingIcon( options );\n\n\t\t\t\t\t\tlink.parent().addClass( options.active_class ).siblings( \"li\" ).removeClass( options.active_class );\n\n\t\t\t\t\t\t$this.children( options.tab_pane_selector ).each(function() {\n\t\t\t\t\t\t\t$( this ).slideUp( \"fast\" ).removeClass( options.active_class );\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$this.children( options.tab_pane_selector ).each(function( index ) {\n\t\t\t\t\t\t\tif ( link.attr( \"rel\" ) === $( this ).attr( \"id\" ) ) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\thelpers.load( this );\n\n\t\t\t\t\t\t\t\t\tif ( $.cookie ) {\n\t\t\t\t\t\t\t\t\t\t$.cookie( options.cookie_name, index, { path: options.cookie_path } );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch ( ex ) {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\n\t\t\t\t\thelpers.showLoadingIcon( options );\n\n\t\t\t\t\t$this.children( options.tab_pane_selector ).each(function( index, elt ) {\n\t\t\t\t\t\tif ( index === active_tab_index ) {\n\t\t\t\t\t\t\thelpers.load( elt );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$( elt ).slideUp( \"fast\" ).removeClass( options.active_class );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tvar helpers = {\n\n\t\t\tgenerate_tab: function( index, element ) {\n\n\t\t\t\tvar id = options.tab_id && $.isFunction( options.tab_id ) ? options.tab_id( element.id ) : element.id;\n\n\t\t\t\tvar cls = options.tab_class;\n\n\t\t\t\tif ( $( element ).data( \"tab-class\" ) ) {\n\t\t\t\t\tcls += \" \" + ( $( element ).data( \"tab-class\" ) );\n\t\t\t\t}\n\n\t\t\t\tcls += index === active_tab_index ? \" \" + options.active_class : \"\";\n\n\t\t\t\tvar label, link;\n\n\t\t\t\tlabel = $( element ).data( \"autotabs-label\" );\n\n\t\t\t\tif ( typeof label === \"undefined\" ) {\n\t\t\t\t\tlabel = $( element ).attr( \"title\" );\n\t\t\t\t}\n\n\t\t\t\tif ( typeof label === \"undefined\" && $( options.tab_label_selector, $( element ) ).length ) {\n\t\t\t\t\tlabel = $( options.tab_label_selector, $( element ) ).get( 0 ).innerHTML;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof label === \"undefined\" ) {\n\t\t\t\t\tlabel = options.tab_label && $.isFunction( options.tab_label ) ? options.tab_label( index, element ) : \"Tab \" + ( index + 1 );\n\t\t\t\t}\n\n\t\t\t\tlink = \"<a href='\" + ( $( element ).attr( \"rel\" ) || \"#\" + element.id ) + \"' rel='\" + element.id + \"'><span>\" + label + \"</span></a>\";\n\n\t\t\t\treturn \"<li class='\" + cls + \"' id='\" + id + \"'>\" + link + \"</li>\";\n\t\t\t},\n\n\t\t\tload: function( pane ) {\n\n\t\t\t\tvar success = helpers.getSuccess( pane.id );\n\n\t\t\t\tvar url = $( pane ).data( \"autotabs-url\" );\n\n\t\t\t\tif ( typeof url === \"undefined\" ) {\n\t\t\t\t\turl = $( pane  ).attr( \"rel\" );\n\t\t\t\t}\n\n\t\t\t\tif ( typeof url !== \"undefined\" && ($.trim( $( pane ).html())  === \"\" || options.force_refresh ) ) {\n\t\t\t\t\t$( pane ).empty();\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\terror: function() { window.location.reload( true ); },\n\t\t\t\t\t\tsuccess: function( data ) {\n\t\t\t\t\t\t\t$( pane ).html( data );\n\t\t\t\t\t\t\t$( pane ).slideDown( \"fast\" ).addClass( options.active_class );\n\t\t\t\t\t\t\tprocessing = false;\n\t\t\t\t\t\t\thelpers.hideLoadingIcon( options );\n\t\t\t\t\t\t\tif ( success && $.isFunction( success ) ) {\n\t\t\t\t\t\t\t\tsuccess.call( pane );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$( pane ).slideDown( \"fast\" ).addClass( options.active_class );\n\n\t\t\t\t\tprocessing = false;\n\n\t\t\t\t\thelpers.hideLoadingIcon( options );\n\n\t\t\t\t\tif ( success && $.isFunction( success ) ) {\n\t\t\t\t\t\tsuccess.call( pane );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetSuccess: function( id ) {\n\t\t\t\tif ( !options.success ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( $.isFunction( options.success ) ) {\n\t\t\t\t\treturn options.success;\n\t\t\t\t}\n\n\t\t\t\treturn options.success[ id ];\n\t\t\t},\n\n\t\t\tshowLoadingIcon: function( options ) {\n\t\t\t\tif ( !options.loading_icon ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$( options.loading_icon ).show();\n\t\t\t},\n\n\t\t\thideLoadingIcon: function( options ) {\n\t\t\t\tif ( !options.loading_icon ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$( options.loading_icon ).hide();\n\t\t\t}\n\t\t};\n\n\t\t// Method calling logic\n\t\tif ( methods[ method ] ) {\n\t\t\treturn methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ) );\n\t\t} else if ( typeof method === \"object\" || !method)  {\n\t\t\treturn methods.init.apply( this, arguments );\n\t\t} else {\n\t\t\t$.error( \"Method \" +  method + \" does not exist in jQuery.autotab\" );\n\t\t}\n\t};\n\n\t$.fn.autotabs.defaults = {\n\t\ttab_pane_selector: \"div, section, .tab-pane\",\n\t\ttab_label_selector: \"h1, h2, h3, h4\",\n\t\ttabs_class: \"autotabs\",\n\t\ttab_class: \"autotab\",\n\t\ttabs_selector: \"\",\n\t\tactive_class: \"current\",\n\t\tactive_tab: null,\n\t\tcookie_name: \"active_tab\",\n\t\tcookie_path: \"/\",\n\t\tforce_refresh: false,\n\t\ttab_orphans: false,\n\t\tloading_icon: \"#loading\",\n\t\ttab_id: function( id ) { return \"__\" + id; },\n\t\ttab_label: function( index ) { return \"Tab \" + ( index + 1 ); },\n\t\ttab_pane_id: function( index ) { return \"___\" + ( index + 1 ); },\n\t\tvertical: false\n\t};\n} )( jQuery );","!function(a){\"use strict\";a.fn.autotabs=function(t){var e,i,n=!1,s={init:function(t){return e=a.extend(!0,{},this.autotabs.defaults,t),this.each(function(){var t=a(this),s=t.children(e.tab_pane_selector);if(0!==s.length){if(1===s.length&&!e.tab_orphans)return s.show(),void 0;var o=\"<ul class='\"+e.tabs_class+(e.vertical?\" vertical\":\"\")+\"'>\";i=(null===e.active_tab?a.cookie?a.cookie(e.cookie_name):0:e.active_tab)||0,i=Math.min(s.length-1,i),s.each(function(t,i){if(\"\"===i.id){var n=e.tab_pane_id&&a.isFunction(e.tab_pane_id)?e.tab_pane_id(t,i):\"___\"+(t+1);a(i).attr(\"id\",n)}o+=c.generate_tab(t,i)}),o+=\"</ul>\";var l=\"\"!==e.tabs_selector?a(e.tabs_selector):t;l||(l=t),a(\"ul.\"+e.tabs_class.replace(/\\s/,\".\"),l).remove(),l.prepend(o),a(\"li > a\",l.children().first()).click(function(){if(n)return!1;var i=a(this);return a(this).parent().hasClass(e.active_class)&&!e.force_refresh?!1:(n=!0,c.showLoadingIcon(e),i.parent().addClass(e.active_class).siblings(\"li\").removeClass(e.active_class),t.children(e.tab_pane_selector).each(function(){a(this).slideUp(\"fast\").removeClass(e.active_class)}),t.children(e.tab_pane_selector).each(function(t){if(i.attr(\"rel\")===a(this).attr(\"id\"))try{c.load(this),a.cookie&&a.cookie(e.cookie_name,t,{path:e.cookie_path})}catch(n){}}),!1)}),c.showLoadingIcon(e),t.children(e.tab_pane_selector).each(function(t,n){t===i?c.load(n):a(n).slideUp(\"fast\").removeClass(e.active_class)})}})}},c={generate_tab:function(t,n){var s=e.tab_id&&a.isFunction(e.tab_id)?e.tab_id(n.id):n.id,c=e.tab_class;a(n).data(\"tab-class\")&&(c+=\" \"+a(n).data(\"tab-class\")),c+=t===i?\" \"+e.active_class:\"\";var o,l;return o=a(n).data(\"autotabs-label\"),\"undefined\"==typeof o&&(o=a(n).attr(\"title\")),\"undefined\"==typeof o&&a(e.tab_label_selector,a(n)).length&&(o=a(e.tab_label_selector,a(n)).get(0).innerHTML),\"undefined\"==typeof o&&(o=e.tab_label&&a.isFunction(e.tab_label)?e.tab_label(t,n):\"Tab \"+(t+1)),l=\"<a href='\"+(a(n).attr(\"rel\")||\"#\"+n.id)+\"' rel='\"+n.id+\"'><span>\"+o+\"</span></a>\",\"<li class='\"+c+\"' id='\"+s+\"'>\"+l+\"</li>\"},load:function(t){var i=c.getSuccess(t.id),s=a(t).data(\"autotabs-url\");\"undefined\"==typeof s&&(s=a(t).attr(\"rel\")),\"undefined\"==typeof s||\"\"!==a.trim(a(t).html())&&!e.force_refresh?(a(t).slideDown(\"fast\").addClass(e.active_class),n=!1,c.hideLoadingIcon(e),i&&a.isFunction(i)&&i.call(t)):(a(t).empty(),a.ajax({url:s,error:function(){window.location.reload(!0)},success:function(s){a(t).html(s),a(t).slideDown(\"fast\").addClass(e.active_class),n=!1,c.hideLoadingIcon(e),i&&a.isFunction(i)&&i.call(t)}}))},getSuccess:function(t){return e.success?a.isFunction(e.success)?e.success:e.success[t]:null},showLoadingIcon:function(t){t.loading_icon&&a(t.loading_icon).show()},hideLoadingIcon:function(t){t.loading_icon&&a(t.loading_icon).hide()}};return s[t]?s[t].apply(this,Array.prototype.slice.call(arguments,1)):\"object\"!=typeof t&&t?(a.error(\"Method \"+t+\" does not exist in jQuery.autotab\"),void 0):s.init.apply(this,arguments)},a.fn.autotabs.defaults={tab_pane_selector:\"div, section, .tab-pane\",tab_label_selector:\"h1, h2, h3, h4\",tabs_class:\"autotabs\",tab_class:\"autotab\",tabs_selector:\"\",active_class:\"current\",active_tab:null,cookie_name:\"active_tab\",cookie_path:\"/\",force_refresh:!1,tab_orphans:!1,loading_icon:\"#loading\",tab_id:function(a){return\"__\"+a},tab_label:function(a){return\"Tab \"+(a+1)},tab_pane_id:function(a){return\"___\"+(a+1)},vertical:!1}}(jQuery);","jQuery(document).ready(function ($) {\n\n    // ---------------------------------------------------------\n    // 下拉\n    // ---------------------------------------------------------\n    $('.menu').dropit();\n\n    // ---------------------------------------------------------\n    // 图片遮罩，鼠标滑过显示隐藏的元素\n    // ---------------------------------------------------------\n    $(\".ui-hover li\").each(function () {\n        $(this).hover(function () {\n            $(this).find(\".hide\").fadeIn('slow');\n        }, function () {\n            $(this).find(\".hide\").fadeOut('fast');\n        });\n    });\n\n\n    // ---------------------------------------------------------\n    // Tab 切换\n    // ---------------------------------------------------------\n    $('.ui-tabs').each(function () {\n        var el = $(this);\n        el.find('.tab-content-pane:first').show();\n    });\n\n    $('.tab-title').each(function () {\n        var el = $(this);\n        el.find('.tab-title-item:first').addClass('active');\n    });\n\n    $('.ui-tabs .tab-title .tab-title-item a').hover(function () {\n        var el = $(this),\n            parent = el.closest('.ui-tabs'),\n            activetab = el.attr('href');\n        parent.find('.tab-title-item').removeClass('active');\n\n        el.closest('li').addClass('active');\n        parent.find('.tab-content-pane').hide();\n\n        parent.find(activetab).show();\n\n        return false;\n    });\n\n\n    // ---------------------------------------------------------\n    // accordion\n    // ---------------------------------------------------------\n    var all = $('.accordion > dd');\n    all.hide(); //所有内容\n\n    $('.accordion > dt > a').click(function () { //点击标题\n\n        if ($(this).attr('href') === \"#\") {\n            $(this).click(function () {\n                return false;\n            });\n        }\n\n        var next = $(this).parent().next(); //相邻的内容元素\n        if (next.is(\":visible\")) { //如果相邻的元素是展开的，隐藏\n            all.slideUp('fast');\n        } else {\n            all.slideUp(); //所有内容折叠\n            next.slideDown('fast'); //和标题紧邻的内容展开\n        }\n\n        return false;\n    });\n\n\n    // ---------------------------------------------------------\n    // Toggle\n    // ---------------------------------------------------------\n    var allt = $('.toggle > dd');\n    allt.hide(); //所有内容\n\n    $('.toggle > dt > a').click(function () { //点击标题\n\n        if ($(this).attr('href') === \"#\") {\n            $(this).click(function () {\n                return false;\n            });\n        }\n\n        var next = $(this).parent().next(); //相邻的内容元素\n        if (next.is(\":visible\")) { //如果相邻的元素是展开的，隐藏\n            next.slideUp('fast');\n        } else {\n            next.slideDown('fast'); //和标题紧邻的内容展开\n        }\n\n        return false;\n    });\n\n});\n","/*\n * Dropit v1.1.0\n * http://dev7studios.com/dropit\n *\n * Copyright 2012, Dev7studios\n * Free to use and abuse under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n */\n\n;(function($) {\n\n    $.fn.dropit = function(method) {\n\n        var methods = {\n\n            init : function(options) {\n                this.dropit.settings = $.extend({}, this.dropit.defaults, options);\n                return this.each(function() {\n                    var $el = $(this),\n                         el = this,\n                         settings = $.fn.dropit.settings;\n\n                    // Hide initial submenus\n                    $el.addClass('dropit')\n                    .find('>'+ settings.triggerParentEl +':has('+ settings.submenuEl +')').addClass('dropit-trigger')\n                    .find(settings.submenuEl).addClass('dropit-submenu').hide();\n\n                    // Open on click\n                    $el.off(settings.action).on(settings.action, settings.triggerParentEl +':has('+ settings.submenuEl +') > '+ settings.triggerEl +'', function(){\n                        // Close click menu's if clicked again\n                        if(settings.action === 'click' && $(this).parents(settings.triggerParentEl).hasClass('dropit-open')){\n                            settings.beforeHide.call(this);\n                            $(this).parents(settings.triggerParentEl).removeClass('dropit-open').find(settings.submenuEl).hide();\n                            settings.afterHide.call(this);\n                            return false;\n                        }\n\n                        // Hide open menus\n                        settings.beforeHide.call(this);\n                        $('.dropit-open').removeClass('dropit-open').find('.dropit-submenu').hide();\n                        settings.afterHide.call(this);\n\n                        // Open this menu\n                        settings.beforeShow.call(this);\n                        $(this).parents(settings.triggerParentEl).addClass('dropit-open').find(settings.submenuEl).show();\n                        settings.afterShow.call(this);\n\n                        return false;\n                    });\n\n                    // Close if outside click\n                    $(document).on('click', function(){\n                        settings.beforeHide.call(this);\n                        $('.dropit-open').removeClass('dropit-open').find('.dropit-submenu').hide();\n                        settings.afterHide.call(this);\n                    });\n\n                    // If hover\n                    if(settings.action === 'mouseenter'){\n                        $el.on('mouseleave', '.dropit-open', function(){\n                            settings.beforeHide.call(this);\n                            $(this).removeClass('dropit-open').find(settings.submenuEl).hide();\n                            settings.afterHide.call(this);\n                        });\n                    }\n\n                    settings.afterLoad.call(this);\n                });\n            }\n\n        };\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in dropit plugin!');\n        }\n\n    };\n\n    $.fn.dropit.defaults = {\n        action: 'click', // The open action for the trigger\n        submenuEl: 'ul', // The submenu element\n        triggerEl: 'a', // The trigger element\n        triggerParentEl: 'li', // The trigger parent element\n        afterLoad: function(){}, // Triggers when plugin has loaded\n        beforeShow: function(){}, // Triggers before submenu is shown\n        afterShow: function(){}, // Triggers after submenu is shown\n        beforeHide: function(){}, // Triggers before submenu is hidden\n        afterHide: function(){} // Triggers before submenu is hidden\n    };\n\n    $.fn.dropit.settings = {};\n\n})(jQuery);\n",";(function ($) {\n\n    var defaults = {\n\n        // GENERAL\n        mode: 'horizontal',\n        slideSelector: '',\n        infiniteLoop: true,\n        hideControlOnEnd: false,\n        speed: 500,\n        easing: null,\n        slideMargin: 0,\n        startSlide: 0,\n        randomStart: false,\n        captions: false,\n        ticker: false,\n        tickerHover: false,\n        adaptiveHeight: false,\n        adaptiveHeightSpeed: 500,\n        video: false,\n        useCSS: true,\n        preloadImages: 'visible',\n        responsive: true,\n        slideZIndex: 50,\n        wrapperClass: 'bx-wrapper',\n\n        // TOUCH\n        touchEnabled: true,\n        swipeThreshold: 50,\n        oneToOneTouch: true,\n        preventDefaultSwipeX: true,\n        preventDefaultSwipeY: false,\n\n        // ACCESSIBILITY\n        ariaLive: true,\n        ariaHidden: true,\n\n        // KEYBOARD\n        keyboardEnabled: false,\n\n        // PAGER\n        pager: true,\n        pagerType: 'full',\n        pagerShortSeparator: ' / ',\n        pagerSelector: null,\n        buildPager: null,\n        pagerCustom: null,\n\n        // CONTROLS\n        controls: true,\n        nextText: 'Next',\n        prevText: 'Prev',\n        nextSelector: null,\n        prevSelector: null,\n        autoControls: false,\n        startText: 'Start',\n        stopText: 'Stop',\n        autoControlsCombine: false,\n        autoControlsSelector: null,\n\n        // AUTO\n        auto: false,\n        pause: 4000,\n        autoStart: true,\n        autoDirection: 'next',\n        stopAutoOnClick: false,\n        autoHover: false,\n        autoDelay: 0,\n        autoSlideForOnePage: false,\n\n        // CAROUSEL\n        minSlides: 1,\n        maxSlides: 1,\n        moveSlides: 0,\n        slideWidth: 0,\n        shrinkItems: false,\n\n        // CALLBACKS\n        onSliderLoad: function () {\n            return true;\n        },\n        onSlideBefore: function () {\n            return true;\n        },\n        onSlideAfter: function () {\n            return true;\n        },\n        onSlideNext: function () {\n            return true;\n        },\n        onSlidePrev: function () {\n            return true;\n        },\n        onSliderResize: function () {\n            return true;\n        }\n    };\n\n    $.fn.bxSlider = function (options) {\n\n        if (this.length === 0) {\n            return this;\n        }\n\n        // support multiple elements\n        if (this.length > 1) {\n            this.each(function () {\n                $(this).bxSlider(options);\n            });\n            return this;\n        }\n\n        // create a namespace to be used throughout the plugin\n        var slider = {},\n        // set a reference to our slider element\n            el = this,\n        // get the original window dimens (thanks a lot IE)\n            windowWidth = $(window).width(),\n            windowHeight = $(window).height();\n\n        // Return if slider is already initialized\n        if ($(el).data('bxSlider')) {\n            return;\n        }\n\n        /**\n         * ===================================================================================\n         * = PRIVATE FUNCTIONS\n         * ===================================================================================\n         */\n\n        /**\n         * Initializes namespace settings to be used throughout plugin\n         */\n        var init = function () {\n            // Return if slider is already initialized\n            if ($(el).data('bxSlider')) {\n                return;\n            }\n            // merge user-supplied options with the defaults\n            slider.settings = $.extend({}, defaults, options);\n            // parse slideWidth setting\n            slider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n            // store the original children\n            slider.children = el.children(slider.settings.slideSelector);\n            // check if actual number of slides is less than minSlides / maxSlides\n            if (slider.children.length < slider.settings.minSlides) {\n                slider.settings.minSlides = slider.children.length;\n            }\n            if (slider.children.length < slider.settings.maxSlides) {\n                slider.settings.maxSlides = slider.children.length;\n            }\n            // if random start, set the startSlide setting to random number\n            if (slider.settings.randomStart) {\n                slider.settings.startSlide = Math.floor(Math.random() * slider.children.length);\n            }\n            // store active slide information\n            slider.active = {index: slider.settings.startSlide};\n            // store if the slider is in carousel mode (displaying / moving multiple slides)\n            slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;\n            // if carousel, force preloadImages = 'all'\n            if (slider.carousel) {\n                slider.settings.preloadImages = 'all';\n            }\n            // calculate the min / max width thresholds based on min / max number of slides\n            // used to setup and update carousel slides dimensions\n            slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n            slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n            // store the current state of the slider (if currently animating, working is true)\n            slider.working = false;\n            // initialize the controls object\n            slider.controls = {};\n            // initialize an auto interval\n            slider.interval = null;\n            // determine which property to use for transitions\n            slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';\n            // determine if hardware acceleration can be used\n            slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function () {\n                    // create our test div element\n                    var div = document.createElement('div'),\n                    // css transition properties\n                        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n                    // test for each property\n                    for (var i = 0; i < props.length; i++) {\n                        if (div.style[props[i]] !== undefined) {\n                            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n                            slider.animProp = '-' + slider.cssPrefix + '-transform';\n                            return true;\n                        }\n                    }\n                    return false;\n                }());\n            // if vertical mode always make maxSlides and minSlides equal\n            if (slider.settings.mode === 'vertical') {\n                slider.settings.maxSlides = slider.settings.minSlides;\n            }\n            // save original style data\n            el.data('origStyle', el.attr('style'));\n            el.children(slider.settings.slideSelector).each(function () {\n                $(this).data('origStyle', $(this).attr('style'));\n            });\n\n            // perform all DOM / CSS modifications\n            setup();\n        };\n\n        /**\n         * Performs all DOM and CSS modifications\n         */\n        var setup = function () {\n            var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)\n\n            // wrap el in a wrapper\n            el.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n            // store a namespace reference to .bx-viewport\n            slider.viewport = el.parent();\n\n            // add aria-live if the setting is enabled and ticker mode is disabled\n            if (slider.settings.ariaLive && !slider.settings.ticker) {\n                slider.viewport.attr('aria-live', 'polite');\n            }\n            // add a loading div to display while images are loading\n            slider.loader = $('<div class=\"bx-loading\" />');\n            slider.viewport.prepend(slider.loader);\n            // set el to a massive width, to hold any needed slides\n            // also strip any margin and padding from el\n            el.css({\n                width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',\n                position: 'relative'\n            });\n            // if using CSS, add the easing property\n            if (slider.usingCSS && slider.settings.easing) {\n                el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n                // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n            } else if (!slider.settings.easing) {\n                slider.settings.easing = 'swing';\n            }\n            // make modifications to the viewport (.bx-viewport)\n            slider.viewport.css({\n                width: '100%',\n                overflow: 'hidden',\n                position: 'relative'\n            });\n            slider.viewport.parent().css({\n                maxWidth: getViewportMaxWidth()\n            });\n            // make modification to the wrapper (.bx-wrapper)\n            if (!slider.settings.pager && !slider.settings.controls) {\n                slider.viewport.parent().css({\n                    margin: '0 auto 0px'\n                });\n            }\n            // apply css to all slider children\n            slider.children.css({\n                float: slider.settings.mode === 'horizontal' ? 'left' : 'none',\n                listStyle: 'none',\n                position: 'relative'\n            });\n            // apply the calculated width after the float is applied to prevent scrollbar interference\n            slider.children.css('width', getSlideWidth());\n            // if slideMargin is supplied, add the css\n            if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) {\n                slider.children.css('marginRight', slider.settings.slideMargin);\n            }\n            if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) {\n                slider.children.css('marginBottom', slider.settings.slideMargin);\n            }\n            // if \"fade\" mode, add positioning and z-index CSS\n            if (slider.settings.mode === 'fade') {\n                slider.children.css({\n                    position: 'absolute',\n                    zIndex: 0,\n                    display: 'none'\n                });\n                // prepare the z-index on the showing element\n                slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n            }\n            // create an element to contain all slider controls (pager, start / stop, etc)\n            slider.controls.el = $('<div class=\"bx-controls\" />');\n            // if captions are requested, add them\n            if (slider.settings.captions) {\n                appendCaptions();\n            }\n            // check if startSlide is last slide\n            slider.active.last = slider.settings.startSlide === getPagerQty() - 1;\n            // if video is true, set up the fitVids plugin\n            if (slider.settings.video) {\n                el.fitVids();\n            }\n            if (slider.settings.preloadImages === 'all' || slider.settings.ticker) {\n                preloadSelector = slider.children;\n            }\n            // only check for control addition if not in \"ticker\" mode\n            if (!slider.settings.ticker) {\n                // if controls are requested, add them\n                if (slider.settings.controls) {\n                    appendControls();\n                }\n                // if auto is true, and auto controls are requested, add them\n                if (slider.settings.auto && slider.settings.autoControls) {\n                    appendControlsAuto();\n                }\n                // if pager is requested, add it\n                if (slider.settings.pager) {\n                    appendPager();\n                }\n                // if any control option is requested, add the controls wrapper\n                if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) {\n                    slider.viewport.after(slider.controls.el);\n                }\n                // if ticker mode, do not allow a pager\n            } else {\n                slider.settings.pager = false;\n            }\n            loadElements(preloadSelector, start);\n        };\n\n        var loadElements = function (selector, callback) {\n            var total = selector.find('img:not([src=\"\"]), iframe').length,\n                count = 0;\n            if (total === 0) {\n                callback();\n                return;\n            }\n            selector.find('img:not([src=\"\"]), iframe').each(function () {\n                $(this).one('load error', function () {\n                    if (++count === total) {\n                        callback();\n                    }\n                }).each(function () {\n                    if (this.complete) {\n                        $(this).load();\n                    }\n                });\n            });\n        };\n\n        /**\n         * Start the slider\n         */\n        var start = function () {\n            // if infinite loop, prepare additional slides\n            if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {\n                var slice = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,\n                    sliceAppend = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),\n                    slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');\n                if (slider.settings.ariaHidden) {\n                    sliceAppend.attr('aria-hidden', true);\n                    slicePrepend.attr('aria-hidden', true);\n                }\n                el.append(sliceAppend).prepend(slicePrepend);\n            }\n            // remove the loading DOM element\n            slider.loader.remove();\n            // set the left / top position of \"el\"\n            setSlidePosition();\n            // if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n            if (slider.settings.mode === 'vertical') {\n                slider.settings.adaptiveHeight = true;\n            }\n            // set the viewport height\n            slider.viewport.height(getViewportHeight());\n            // make sure everything is positioned just right (same as a window resize)\n            el.redrawSlider();\n            // onSliderLoad callback\n            slider.settings.onSliderLoad.call(el, slider.active.index);\n            // slider has been fully initialized\n            slider.initialized = true;\n            // bind the resize call to the window\n            if (slider.settings.responsive) {\n                $(window).bind('resize', resizeWindow);\n            }\n            // if auto is true and has more than 1 page, start the show\n            if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) {\n                initAuto();\n            }\n            // if ticker is true, start the ticker\n            if (slider.settings.ticker) {\n                initTicker();\n            }\n            // if pager is requested, make the appropriate pager link active\n            if (slider.settings.pager) {\n                updatePagerActive(slider.settings.startSlide);\n            }\n            // check for any updates to the controls (like hideControlOnEnd updates)\n            if (slider.settings.controls) {\n                updateDirectionControls();\n            }\n            // if touchEnabled is true, setup the touch events\n            if (slider.settings.touchEnabled && !slider.settings.ticker) {\n                initTouch();\n            }\n            // if keyboardEnabled is true, setup the keyboard events\n            if (slider.settings.keyboardEnabled && !slider.settings.ticker) {\n                $(document).keydown(keyPress);\n            }\n        };\n\n        /**\n         * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n         */\n        var getViewportHeight = function () {\n            var height = 0;\n            // first determine which children (slides) should be used in our height calculation\n            var children = $();\n            // if mode is not \"vertical\" and adaptiveHeight is false, include all children\n            if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {\n                children = slider.children;\n            } else {\n                // if not carousel, return the single active child\n                if (!slider.carousel) {\n                    children = slider.children.eq(slider.active.index);\n                    // if carousel, return a slice of children\n                } else {\n                    // get the individual slide index\n                    var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();\n                    // add the current slide to the children\n                    children = slider.children.eq(currentIndex);\n                    // cycle through the remaining \"showing\" slides\n                    for (i = 1; i <= slider.settings.maxSlides - 1; i++) {\n                        // if looped back to the start\n                        if (currentIndex + i >= slider.children.length) {\n                            children = children.add(slider.children.eq(i - 1));\n                        } else {\n                            children = children.add(slider.children.eq(currentIndex + i));\n                        }\n                    }\n                }\n            }\n            // if \"vertical\" mode, calculate the sum of the heights of the children\n            if (slider.settings.mode === 'vertical') {\n                children.each(function (index) {\n                    height += $(this).outerHeight();\n                });\n                // add user-supplied margins\n                if (slider.settings.slideMargin > 0) {\n                    height += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n                }\n                // if not \"vertical\" mode, calculate the max height of the children\n            } else {\n                height = Math.max.apply(Math, children.map(function () {\n                    return $(this).outerHeight(false);\n                }).get());\n            }\n\n            if (slider.viewport.css('box-sizing') === 'border-box') {\n                height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n                    parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n            } else if (slider.viewport.css('box-sizing') === 'padding-box') {\n                height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n            }\n\n            return height;\n        };\n\n        /**\n         * Returns the calculated width to be used for the outer wrapper / viewport\n         */\n        var getViewportMaxWidth = function () {\n            var width = '100%';\n            if (slider.settings.slideWidth > 0) {\n                if (slider.settings.mode === 'horizontal') {\n                    width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n                } else {\n                    width = slider.settings.slideWidth;\n                }\n            }\n            return width;\n        };\n\n        /**\n         * Returns the calculated width to be applied to each slide\n         */\n        var getSlideWidth = function () {\n            var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width\n                wrapWidth = slider.viewport.width();    // get the current viewport width\n            // if slide width was not supplied, or is larger than the viewport use the viewport width\n            if (slider.settings.slideWidth === 0 ||\n                (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n                slider.settings.mode === 'vertical') {\n                newElWidth = wrapWidth;\n                // if carousel, use the thresholds to determine the width\n            } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {\n                if (wrapWidth > slider.maxThreshold) {\n                    return newElWidth;\n                } else if (wrapWidth < slider.minThreshold) {\n                    newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n                } else if (slider.settings.shrinkItems) {\n                    newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);\n                }\n            }\n            return newElWidth;\n        };\n\n        /**\n         * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n         */\n        var getNumberSlidesShowing = function () {\n            var slidesShowing = 1,\n                childWidth = null;\n            if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {\n                // if viewport is smaller than minThreshold, return minSlides\n                if (slider.viewport.width() < slider.minThreshold) {\n                    slidesShowing = slider.settings.minSlides;\n                    // if viewport is larger than maxThreshold, return maxSlides\n                } else if (slider.viewport.width() > slider.maxThreshold) {\n                    slidesShowing = slider.settings.maxSlides;\n                    // if viewport is between min / max thresholds, divide viewport width by first child width\n                } else {\n                    childWidth = slider.children.first().width() + slider.settings.slideMargin;\n                    slidesShowing = Math.floor((slider.viewport.width() +\n                        slider.settings.slideMargin) / childWidth);\n                }\n                // if \"vertical\" mode, slides showing will always be minSlides\n            } else if (slider.settings.mode === 'vertical') {\n                slidesShowing = slider.settings.minSlides;\n            }\n            return slidesShowing;\n        };\n\n        /**\n         * Returns the number of pages (one full viewport of slides is one \"page\")\n         */\n        var getPagerQty = function () {\n            var pagerQty = 0,\n                breakPoint = 0,\n                counter = 0;\n            // if moveSlides is specified by the user\n            if (slider.settings.moveSlides > 0) {\n                if (slider.settings.infiniteLoop) {\n                    pagerQty = Math.ceil(slider.children.length / getMoveBy());\n                } else {\n                    // when breakpoint goes above children length, counter is the number of pages\n                    while (breakPoint < slider.children.length) {\n                        ++pagerQty;\n                        breakPoint = counter + getNumberSlidesShowing();\n                        counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n                    }\n                }\n                // if moveSlides is 0 (auto) divide children length by sides showing, then round up\n            } else {\n                pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n            }\n            return pagerQty;\n        };\n\n        /**\n         * Returns the number of individual slides by which to shift the slider\n         */\n        var getMoveBy = function () {\n            // if moveSlides was set by the user and moveSlides is less than number of slides showing\n            if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {\n                return slider.settings.moveSlides;\n            }\n            // if moveSlides is 0 (auto)\n            return getNumberSlidesShowing();\n        };\n\n        /**\n         * Sets the slider's (el) left or top position\n         */\n        var setSlidePosition = function () {\n            var position, lastChild, lastShowingIndex;\n            // if last slide, not infinite loop, and number of children is larger than specified maxSlides\n            if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {\n                if (slider.settings.mode === 'horizontal') {\n                    // get the last child's position\n                    lastChild = slider.children.last();\n                    position = lastChild.position();\n                    // set the left position\n                    setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n                } else if (slider.settings.mode === 'vertical') {\n                    // get the last showing index's position\n                    lastShowingIndex = slider.children.length - slider.settings.minSlides;\n                    position = slider.children.eq(lastShowingIndex).position();\n                    // set the top position\n                    setPositionProperty(-position.top, 'reset', 0);\n                }\n                // if not last slide\n            } else {\n                // get the position of the first showing slide\n                position = slider.children.eq(slider.active.index * getMoveBy()).position();\n                // check for last slide\n                if (slider.active.index === getPagerQty() - 1) {\n                    slider.active.last = true;\n                }\n                // set the respective position\n                if (position !== undefined) {\n                    if (slider.settings.mode === 'horizontal') {\n                        setPositionProperty(-position.left, 'reset', 0);\n                    }\n                    else if (slider.settings.mode === 'vertical') {\n                        setPositionProperty(-position.top, 'reset', 0);\n                    }\n                }\n            }\n        };\n\n        /**\n         * Sets the el's animating property position (which in turn will sometimes animate el).\n         * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n         *\n         * @param value (int)\n         *  - the animating property's value\n         *\n         * @param type (string) 'slide', 'reset', 'ticker'\n         *  - the type of instance for which the function is being\n         *\n         * @param duration (int)\n         *  - the amount of time (in ms) the transition should occupy\n         *\n         * @param params (array) optional\n         *  - an optional parameter containing any variables that need to be passed in\n         */\n        var setPositionProperty = function (value, type, duration, params) {\n            var animateObj, propValue;\n            // use CSS transform\n            if (slider.usingCSS) {\n                // determine the translate3d value\n                propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n                // add the CSS transition-duration\n                el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n                if (type === 'slide') {\n                    // set the property value\n                    el.css(slider.animProp, propValue);\n                    if (duration !== 0) {\n                        // bind a callback method - executes when CSS transition completes\n                        el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function (e) {\n                            //make sure it's the correct one\n                            if (!$(e.target).is(el)) {\n                                return;\n                            }\n                            // unbind the callback\n                            el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n                            updateAfterSlideTransition();\n                        });\n                    } else { //duration = 0\n                        updateAfterSlideTransition();\n                    }\n                } else if (type === 'reset') {\n                    el.css(slider.animProp, propValue);\n                } else if (type === 'ticker') {\n                    // make the transition use 'linear'\n                    el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n                    el.css(slider.animProp, propValue);\n                    if (duration !== 0) {\n                        el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function (e) {\n                            //make sure it's the correct one\n                            if (!$(e.target).is(el)) {\n                                return;\n                            }\n                            // unbind the callback\n                            el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n                            // reset the position\n                            setPositionProperty(params.resetValue, 'reset', 0);\n                            // start the loop again\n                            tickerLoop();\n                        });\n                    } else { //duration = 0\n                        setPositionProperty(params.resetValue, 'reset', 0);\n                        tickerLoop();\n                    }\n                }\n                // use JS animate\n            } else {\n                animateObj = {};\n                animateObj[slider.animProp] = value;\n                if (type === 'slide') {\n                    el.animate(animateObj, duration, slider.settings.easing, function () {\n                        updateAfterSlideTransition();\n                    });\n                } else if (type === 'reset') {\n                    el.css(slider.animProp, value);\n                } else if (type === 'ticker') {\n                    el.animate(animateObj, duration, 'linear', function () {\n                        setPositionProperty(params.resetValue, 'reset', 0);\n                        // run the recursive loop after animation\n                        tickerLoop();\n                    });\n                }\n            }\n        };\n\n        /**\n         * Populates the pager with proper amount of pages\n         */\n        var populatePager = function () {\n            var pagerHtml = '',\n                linkContent = '',\n                pagerQty = getPagerQty();\n            // loop through each pager item\n            for (var i = 0; i < pagerQty; i++) {\n                linkContent = '';\n                // if a buildPager function is supplied, use it to get pager link value, else use index + 1\n                if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {\n                    linkContent = slider.settings.buildPager(i);\n                    slider.pagerEl.addClass('bx-custom-pager');\n                } else {\n                    linkContent = i + 1;\n                    slider.pagerEl.addClass('bx-default-pager');\n                }\n                // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n                // add the markup to the string\n                pagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n            }\n            // populate the pager element with pager links\n            slider.pagerEl.html(pagerHtml);\n        };\n\n        /**\n         * Appends the pager to the controls element\n         */\n        var appendPager = function () {\n            if (!slider.settings.pagerCustom) {\n                // create the pager DOM element\n                slider.pagerEl = $('<div class=\"bx-pager\" />');\n                // if a pager selector was supplied, populate it with the pager\n                if (slider.settings.pagerSelector) {\n                    $(slider.settings.pagerSelector).html(slider.pagerEl);\n                    // if no pager selector was supplied, add it after the wrapper\n                } else {\n                    slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n                }\n                // populate the pager\n                populatePager();\n            } else {\n                slider.pagerEl = $(slider.settings.pagerCustom);\n            }\n            // assign the pager click binding\n            slider.pagerEl.on('click touchend', 'a', clickPagerBind);\n        };\n\n        /**\n         * Appends prev / next controls to the controls element\n         */\n        var appendControls = function () {\n            slider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n            slider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n            // bind click actions to the controls\n            slider.controls.next.bind('click touchend', clickNextBind);\n            slider.controls.prev.bind('click touchend', clickPrevBind);\n            // if nextSelector was supplied, populate it\n            if (slider.settings.nextSelector) {\n                $(slider.settings.nextSelector).append(slider.controls.next);\n            }\n            // if prevSelector was supplied, populate it\n            if (slider.settings.prevSelector) {\n                $(slider.settings.prevSelector).append(slider.controls.prev);\n            }\n            // if no custom selectors were supplied\n            if (!slider.settings.nextSelector && !slider.settings.prevSelector) {\n                // add the controls to the DOM\n                slider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n                // add the control elements to the directionEl\n                slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n                // slider.viewport.append(slider.controls.directionEl);\n                slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n            }\n        };\n\n        /**\n         * Appends start / stop auto controls to the controls element\n         */\n        var appendControlsAuto = function () {\n            slider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n            slider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n            // add the controls to the DOM\n            slider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n            // bind click actions to the controls\n            slider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n            slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n            // if autoControlsCombine, insert only the \"start\" control\n            if (slider.settings.autoControlsCombine) {\n                slider.controls.autoEl.append(slider.controls.start);\n                // if autoControlsCombine is false, insert both controls\n            } else {\n                slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n            }\n            // if auto controls selector was supplied, populate it with the controls\n            if (slider.settings.autoControlsSelector) {\n                $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n                // if auto controls selector was not supplied, add it after the wrapper\n            } else {\n                slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n            }\n            // update the auto controls\n            updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n        };\n\n        /**\n         * Appends image captions to the DOM\n         */\n        var appendCaptions = function () {\n            // cycle through each child\n            slider.children.each(function (index) {\n                // get the image title attribute\n                var title = $(this).find('img:first').attr('title');\n                // append the caption\n                if (title !== undefined && ('' + title).length) {\n                    $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n                }\n            });\n        };\n\n        /**\n         * Click next binding\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var clickNextBind = function (e) {\n            e.preventDefault();\n            if (slider.controls.el.hasClass('disabled')) {\n                return;\n            }\n            // if auto show is running, stop it\n            if (slider.settings.auto && slider.settings.stopAutoOnClick) {\n                el.stopAuto();\n            }\n            el.goToNextSlide();\n        };\n\n        /**\n         * Click prev binding\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var clickPrevBind = function (e) {\n            e.preventDefault();\n            if (slider.controls.el.hasClass('disabled')) {\n                return;\n            }\n            // if auto show is running, stop it\n            if (slider.settings.auto && slider.settings.stopAutoOnClick) {\n                el.stopAuto();\n            }\n            el.goToPrevSlide();\n        };\n\n        /**\n         * Click start binding\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var clickStartBind = function (e) {\n            el.startAuto();\n            e.preventDefault();\n        };\n\n        /**\n         * Click stop binding\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var clickStopBind = function (e) {\n            el.stopAuto();\n            e.preventDefault();\n        };\n\n        /**\n         * Click pager binding\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var clickPagerBind = function (e) {\n            var pagerLink, pagerIndex;\n            e.preventDefault();\n            if (slider.controls.el.hasClass('disabled')) {\n                return;\n            }\n            // if auto show is running, stop it\n            if (slider.settings.auto && slider.settings.stopAutoOnClick) {\n                el.stopAuto();\n            }\n            pagerLink = $(e.currentTarget);\n            if (pagerLink.attr('data-slide-index') !== undefined) {\n                pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n                // if clicked pager link is not active, continue with the goToSlide call\n                if (pagerIndex !== slider.active.index) {\n                    el.goToSlide(pagerIndex);\n                }\n            }\n        };\n\n        /**\n         * Updates the pager links with an active class\n         *\n         * @param slideIndex (int)\n         *  - index of slide to make active\n         */\n        var updatePagerActive = function (slideIndex) {\n            // if \"short\" pager type\n            var len = slider.children.length; // nb of children\n            if (slider.settings.pagerType === 'short') {\n                if (slider.settings.maxSlides > 1) {\n                    len = Math.ceil(slider.children.length / slider.settings.maxSlides);\n                }\n                slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n                return;\n            }\n            // remove all pager active classes\n            slider.pagerEl.find('a').removeClass('active');\n            // apply the active class for all pagers\n            slider.pagerEl.each(function (i, el) {\n                $(el).find('a').eq(slideIndex).addClass('active');\n            });\n        };\n\n        /**\n         * Performs needed actions after a slide transition\n         */\n        var updateAfterSlideTransition = function () {\n            // if infinite loop is true\n            if (slider.settings.infiniteLoop) {\n                var position = '';\n                // first slide\n                if (slider.active.index === 0) {\n                    // set the new position\n                    position = slider.children.eq(0).position();\n                    // carousel, last slide\n                } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {\n                    position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n                    // last slide\n                } else if (slider.active.index === slider.children.length - 1) {\n                    position = slider.children.eq(slider.children.length - 1).position();\n                }\n                if (position) {\n                    if (slider.settings.mode === 'horizontal') {\n                        setPositionProperty(-position.left, 'reset', 0);\n                    }\n                    else if (slider.settings.mode === 'vertical') {\n                        setPositionProperty(-position.top, 'reset', 0);\n                    }\n                }\n            }\n            // declare that the transition is complete\n            slider.working = false;\n            // onSlideAfter callback\n            slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n        };\n\n        /**\n         * Updates the auto controls state (either active, or combined switch)\n         *\n         * @param state (string) \"start\", \"stop\"\n         *  - the new state of the auto show\n         */\n        var updateAutoControls = function (state) {\n            // if autoControlsCombine is true, replace the current control with the new state\n            if (slider.settings.autoControlsCombine) {\n                slider.controls.autoEl.html(slider.controls[state]);\n                // if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n            } else {\n                slider.controls.autoEl.find('a').removeClass('active');\n                slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n            }\n        };\n\n        /**\n         * Updates the direction controls (checks if either should be hidden)\n         */\n        var updateDirectionControls = function () {\n            if (getPagerQty() === 1) {\n                slider.controls.prev.addClass('disabled');\n                slider.controls.next.addClass('disabled');\n            } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {\n                // if first slide\n                if (slider.active.index === 0) {\n                    slider.controls.prev.addClass('disabled');\n                    slider.controls.next.removeClass('disabled');\n                    // if last slide\n                } else if (slider.active.index === getPagerQty() - 1) {\n                    slider.controls.next.addClass('disabled');\n                    slider.controls.prev.removeClass('disabled');\n                    // if any slide in the middle\n                } else {\n                    slider.controls.prev.removeClass('disabled');\n                    slider.controls.next.removeClass('disabled');\n                }\n            }\n        };\n\n        /**\n         * Initializes the auto process\n         */\n        var initAuto = function () {\n            // if autoDelay was supplied, launch the auto show using a setTimeout() call\n            if (slider.settings.autoDelay > 0) {\n                var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n                // if autoDelay was not supplied, start the auto show normally\n            } else {\n                el.startAuto();\n\n                //add focus and blur events to ensure its running if timeout gets paused\n                $(window).focus(function () {\n                    el.startAuto();\n                }).blur(function () {\n                    el.stopAuto();\n                });\n            }\n            // if autoHover is requested\n            if (slider.settings.autoHover) {\n                // on el hover\n                el.hover(function () {\n                    // if the auto show is currently playing (has an active interval)\n                    if (slider.interval) {\n                        // stop the auto show and pass true argument which will prevent control update\n                        el.stopAuto(true);\n                        // create a new autoPaused value which will be used by the relative \"mouseout\" event\n                        slider.autoPaused = true;\n                    }\n                }, function () {\n                    // if the autoPaused value was created be the prior \"mouseover\" event\n                    if (slider.autoPaused) {\n                        // start the auto show and pass true argument which will prevent control update\n                        el.startAuto(true);\n                        // reset the autoPaused value\n                        slider.autoPaused = null;\n                    }\n                });\n            }\n        };\n\n        /**\n         * Initializes the ticker process\n         */\n        var initTicker = function () {\n            var startPosition = 0,\n                position, transform, value, idx, ratio, property, newSpeed, totalDimens;\n            // if autoDirection is \"next\", append a clone of the entire slider\n            if (slider.settings.autoDirection === 'next') {\n                el.append(slider.children.clone().addClass('bx-clone'));\n                // if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n            } else {\n                el.prepend(slider.children.clone().addClass('bx-clone'));\n                position = slider.children.first().position();\n                startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n            }\n            setPositionProperty(startPosition, 'reset', 0);\n            // do not allow controls in ticker mode\n            slider.settings.pager = false;\n            slider.settings.controls = false;\n            slider.settings.autoControls = false;\n            // if autoHover is requested\n            if (slider.settings.tickerHover) {\n                if (slider.usingCSS) {\n                    idx = slider.settings.mode === 'horizontal' ? 4 : 5;\n                    slider.viewport.hover(function () {\n                        transform = el.css('-' + slider.cssPrefix + '-transform');\n                        value = parseFloat(transform.split(',')[idx]);\n                        setPositionProperty(value, 'reset', 0);\n                    }, function () {\n                        totalDimens = 0;\n                        slider.children.each(function (index) {\n                            totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n                        });\n                        // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n                        ratio = slider.settings.speed / totalDimens;\n                        // determine which property to use\n                        property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n                        // calculate the new speed\n                        newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));\n                        tickerLoop(newSpeed);\n                    });\n                } else {\n                    // on el hover\n                    slider.viewport.hover(function () {\n                        el.stop();\n                    }, function () {\n                        // calculate the total width of children (used to calculate the speed ratio)\n                        totalDimens = 0;\n                        slider.children.each(function (index) {\n                            totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n                        });\n                        // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n                        ratio = slider.settings.speed / totalDimens;\n                        // determine which property to use\n                        property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n                        // calculate the new speed\n                        newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n                        tickerLoop(newSpeed);\n                    });\n                }\n            }\n            // start the ticker loop\n            tickerLoop();\n        };\n\n        /**\n         * Runs a continuous loop, news ticker-style\n         */\n        var tickerLoop = function (resumeSpeed) {\n            var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,\n                position = {left: 0, top: 0},\n                reset = {left: 0, top: 0},\n                animateProperty, resetValue, params;\n\n            // if \"next\" animate left position to last child, then reset left to 0\n            if (slider.settings.autoDirection === 'next') {\n                position = el.find('.bx-clone').first().position();\n                // if \"prev\" animate left position to 0, then reset left to first non-clone child\n            } else {\n                reset = slider.children.first().position();\n            }\n            animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n            resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;\n            params = {resetValue: resetValue};\n            setPositionProperty(animateProperty, 'ticker', speed, params);\n        };\n\n        /**\n         * Check if el is on screen\n         */\n        var isOnScreen = function (el) {\n            var win = $(window),\n                viewport = {\n                    top: win.scrollTop(),\n                    left: win.scrollLeft()\n                },\n                bounds = el.offset();\n\n            viewport.right = viewport.left + win.width();\n            viewport.bottom = viewport.top + win.height();\n            bounds.right = bounds.left + el.outerWidth();\n            bounds.bottom = bounds.top + el.outerHeight();\n\n            return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));\n        };\n\n        /**\n         * Initializes keyboard events\n         */\n        var keyPress = function (e) {\n            var activeElementTag = document.activeElement.tagName.toLowerCase(),\n                tagFilters = 'input|textarea',\n                p = new RegExp(activeElementTag, ['i']),\n                result = p.exec(tagFilters);\n\n            if (result == null && isOnScreen(el)) {\n                if (e.keyCode === 39) {\n                    clickNextBind(e);\n                    return false;\n                } else if (e.keyCode === 37) {\n                    clickPrevBind(e);\n                    return false;\n                }\n            }\n        };\n\n        /**\n         * Initializes touch events\n         */\n        var initTouch = function () {\n            // initialize object to contain all touch values\n            slider.touch = {\n                start: {x: 0, y: 0},\n                end: {x: 0, y: 0}\n            };\n            slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);\n\n            //for browsers that have implemented pointer events and fire a click after\n            //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not\n            slider.viewport.on('click', '.bxslider a', function (e) {\n                if (slider.viewport.hasClass('click-disabled')) {\n                    e.preventDefault();\n                    slider.viewport.removeClass('click-disabled');\n                }\n            });\n        };\n\n        /**\n         * Event handler for \"touchstart\"\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var onTouchStart = function (e) {\n            //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls\n            slider.controls.el.addClass('disabled');\n\n            if (slider.working) {\n                e.preventDefault();\n                slider.controls.el.removeClass('disabled');\n            } else {\n                // record the original position when touch starts\n                slider.touch.originalPos = el.position();\n                var orig = e.originalEvent,\n                    touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];\n                // record the starting touch x, y coordinates\n                slider.touch.start.x = touchPoints[0].pageX;\n                slider.touch.start.y = touchPoints[0].pageY;\n\n                if (slider.viewport.get(0).setPointerCapture) {\n                    slider.pointerId = orig.pointerId;\n                    slider.viewport.get(0).setPointerCapture(slider.pointerId);\n                }\n                // bind a \"touchmove\" event to the viewport\n                slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);\n                // bind a \"touchend\" event to the viewport\n                slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);\n                slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);\n            }\n        };\n\n        /**\n         * Cancel Pointer for Windows Phone\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var onPointerCancel = function (e) {\n            /* onPointerCancel handler is needed to deal with situations when a touchend\n             doesn't fire after a touchstart (this happens on windows phones only) */\n            setPositionProperty(slider.touch.originalPos.left, 'reset', 0);\n\n            //remove handlers\n            slider.controls.el.removeClass('disabled');\n            slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);\n            slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n            slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n            if (slider.viewport.get(0).releasePointerCapture) {\n                slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n            }\n        };\n\n        /**\n         * Event handler for \"touchmove\"\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var onTouchMove = function (e) {\n            var orig = e.originalEvent,\n                touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n            // if scrolling on y axis, do not prevent default\n                xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),\n                yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),\n                value = 0,\n                change = 0;\n\n            // x axis swipe\n            if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {\n                e.preventDefault();\n                // y axis swipe\n            } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {\n                e.preventDefault();\n            }\n            if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {\n                // if horizontal, drag along x axis\n                if (slider.settings.mode === 'horizontal') {\n                    change = touchPoints[0].pageX - slider.touch.start.x;\n                    value = slider.touch.originalPos.left + change;\n                    // if vertical, drag along y axis\n                } else {\n                    change = touchPoints[0].pageY - slider.touch.start.y;\n                    value = slider.touch.originalPos.top + change;\n                }\n                setPositionProperty(value, 'reset', 0);\n            }\n        };\n\n        /**\n         * Event handler for \"touchend\"\n         *\n         * @param e (event)\n         *  - DOM event object\n         */\n        var onTouchEnd = function (e) {\n            slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n            //enable slider controls as soon as user stops interacing with slides\n            slider.controls.el.removeClass('disabled');\n            var orig = e.originalEvent,\n                touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n                value = 0,\n                distance = 0;\n            // record end x, y positions\n            slider.touch.end.x = touchPoints[0].pageX;\n            slider.touch.end.y = touchPoints[0].pageY;\n            // if fade mode, check if absolute x distance clears the threshold\n            if (slider.settings.mode === 'fade') {\n                distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n                if (distance >= slider.settings.swipeThreshold) {\n                    if (slider.touch.start.x > slider.touch.end.x) {\n                        el.goToNextSlide();\n                    } else {\n                        el.goToPrevSlide();\n                    }\n                    el.stopAuto();\n                }\n                // not fade mode\n            } else {\n                // calculate distance and el's animate property\n                if (slider.settings.mode === 'horizontal') {\n                    distance = slider.touch.end.x - slider.touch.start.x;\n                    value = slider.touch.originalPos.left;\n                } else {\n                    distance = slider.touch.end.y - slider.touch.start.y;\n                    value = slider.touch.originalPos.top;\n                }\n                // if not infinite loop and first / last slide, do not attempt a slide transition\n                if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {\n                    setPositionProperty(value, 'reset', 200);\n                } else {\n                    // check if distance clears threshold\n                    if (Math.abs(distance) >= slider.settings.swipeThreshold) {\n                        if (distance < 0) {\n                            el.goToNextSlide();\n                        } else {\n                            el.goToPrevSlide();\n                        }\n                        el.stopAuto();\n                    } else {\n                        // el.animate(property, 200);\n                        setPositionProperty(value, 'reset', 200);\n                    }\n                }\n            }\n            slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n            if (slider.viewport.get(0).releasePointerCapture) {\n                slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n            }\n        };\n\n        /**\n         * Window resize event callback\n         */\n        var resizeWindow = function (e) {\n            // don't do anything if slider isn't initialized.\n            if (!slider.initialized) {\n                return;\n            }\n            // Delay if slider working.\n            if (slider.working) {\n                window.setTimeout(resizeWindow, 10);\n            } else {\n                // get the new window dimens (again, thank you IE)\n                var windowWidthNew = $(window).width(),\n                    windowHeightNew = $(window).height();\n                // make sure that it is a true window resize\n                // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n                // are resized. Can you just die already?*\n                if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {\n                    // set the new window dimens\n                    windowWidth = windowWidthNew;\n                    windowHeight = windowHeightNew;\n                    // update all dynamic elements\n                    el.redrawSlider();\n                    // Call user resize handler\n                    slider.settings.onSliderResize.call(el, slider.active.index);\n                }\n            }\n        };\n\n        /**\n         * Adds an aria-hidden=true attribute to each element\n         *\n         * @param startVisibleIndex (int)\n         *  - the first visible element's index\n         */\n        var applyAriaHiddenAttributes = function (startVisibleIndex) {\n            var numberOfSlidesShowing = getNumberSlidesShowing();\n            // only apply attributes if the setting is enabled and not in ticker mode\n            if (slider.settings.ariaHidden && !slider.settings.ticker) {\n                // add aria-hidden=true to all elements\n                slider.children.attr('aria-hidden', 'true');\n                // get the visible elements and change to aria-hidden=false\n                slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');\n            }\n        };\n\n        /**\n         * Returns index according to present page range\n         *\n         * @param slideOndex (int)\n         *  - the desired slide index\n         */\n        var setSlideIndex = function (slideIndex) {\n            if (slideIndex < 0) {\n                if (slider.settings.infiniteLoop) {\n                    return getPagerQty() - 1;\n                } else {\n                    //we don't go to undefined slides\n                    return slider.active.index;\n                }\n                // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n            } else if (slideIndex >= getPagerQty()) {\n                if (slider.settings.infiniteLoop) {\n                    return 0;\n                } else {\n                    //we don't move to undefined pages\n                    return slider.active.index;\n                }\n                // set active index to requested slide\n            } else {\n                return slideIndex;\n            }\n        };\n\n        /**\n         * ===================================================================================\n         * = PUBLIC FUNCTIONS\n         * ===================================================================================\n         */\n\n        /**\n         * Performs slide transition to the specified slide\n         *\n         * @param slideIndex (int)\n         *  - the destination slide's index (zero-based)\n         *\n         * @param direction (string)\n         *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n         */\n        el.goToSlide = function (slideIndex, direction) {\n            // onSlideBefore, onSlideNext, onSlidePrev callbacks\n            // Allow transition canceling based on returned value\n            var performTransition = true,\n                moveBy = 0,\n                position = {left: 0, top: 0},\n                lastChild = null,\n                lastShowingIndex, eq, value, requestEl;\n            // store the old index\n            slider.oldIndex = slider.active.index;\n            //set new index\n            slider.active.index = setSlideIndex(slideIndex);\n\n            // if plugin is currently in motion, ignore request\n            if (slider.working || slider.active.index === slider.oldIndex) {\n                return;\n            }\n            // declare that plugin is in motion\n            slider.working = true;\n\n            performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\n            // If transitions canceled, reset and return\n            if (typeof (performTransition) !== 'undefined' && !performTransition) {\n                slider.active.index = slider.oldIndex; // restore old index\n                slider.working = false; // is not in motion\n                return;\n            }\n\n            if (direction === 'next') {\n                // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n                if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n                    performTransition = false;\n                }\n            } else if (direction === 'prev') {\n                // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n                if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n                    performTransition = false;\n                }\n            }\n\n            // check if last slide\n            slider.active.last = slider.active.index >= getPagerQty() - 1;\n            // update the pager with active class\n            if (slider.settings.pager || slider.settings.pagerCustom) {\n                updatePagerActive(slider.active.index);\n            }\n            // // check for direction control update\n            if (slider.settings.controls) {\n                updateDirectionControls();\n            }\n            // if slider is set to mode: \"fade\"\n            if (slider.settings.mode === 'fade') {\n                // if adaptiveHeight is true and next height is different from current height, animate to the new height\n                if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n                    slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n                }\n                // fade out the visible child and reset its z-index value\n                slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n                // fade in the newly requested slide\n                slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function () {\n                    $(this).css('zIndex', slider.settings.slideZIndex);\n                    updateAfterSlideTransition();\n                });\n                // slider mode is not \"fade\"\n            } else {\n                // if adaptiveHeight is true and next height is different from current height, animate to the new height\n                if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n                    slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n                }\n                // if carousel and not infinite loop\n                if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {\n                    if (slider.settings.mode === 'horizontal') {\n                        // get the last child position\n                        lastChild = slider.children.eq(slider.children.length - 1);\n                        position = lastChild.position();\n                        // calculate the position of the last slide\n                        moveBy = slider.viewport.width() - lastChild.outerWidth();\n                    } else {\n                        // get last showing index position\n                        lastShowingIndex = slider.children.length - slider.settings.minSlides;\n                        position = slider.children.eq(lastShowingIndex).position();\n                    }\n                    // horizontal carousel, going previous while on first slide (infiniteLoop mode)\n                } else if (slider.carousel && slider.active.last && direction === 'prev') {\n                    // get the last child position\n                    eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n                    lastChild = el.children('.bx-clone').eq(eq);\n                    position = lastChild.position();\n                    // if infinite loop and \"Next\" is clicked on the last slide\n                } else if (direction === 'next' && slider.active.index === 0) {\n                    // get the last clone position\n                    position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n                    slider.active.last = false;\n                    // normal non-zero requests\n                } else if (slideIndex >= 0) {\n                    //parseInt is applied to allow floats for slides/page\n                    requestEl = slideIndex * parseInt(getMoveBy());\n                    position = slider.children.eq(requestEl).position();\n                }\n\n                /* If the position doesn't exist\n                 * (e.g. if you destroy the slider on a next click),\n                 * it doesn't throw an error.\n                 */\n                if (typeof (position) !== 'undefined') {\n                    value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;\n                    // plugin values to be animated\n                    setPositionProperty(value, 'slide', slider.settings.speed);\n                } else {\n                    slider.working = false;\n                }\n            }\n            if (slider.settings.ariaHidden) {\n                applyAriaHiddenAttributes(slider.active.index * getMoveBy());\n            }\n        };\n\n        /**\n         * Transitions to the next slide in the show\n         */\n        el.goToNextSlide = function () {\n            // if infiniteLoop is false and last page is showing, disregard call\n            if (!slider.settings.infiniteLoop && slider.active.last) {\n                return;\n            }\n            var pagerIndex = parseInt(slider.active.index) + 1;\n            el.goToSlide(pagerIndex, 'next');\n        };\n\n        /**\n         * Transitions to the prev slide in the show\n         */\n        el.goToPrevSlide = function () {\n            // if infiniteLoop is false and last page is showing, disregard call\n            if (!slider.settings.infiniteLoop && slider.active.index === 0) {\n                return;\n            }\n            var pagerIndex = parseInt(slider.active.index) - 1;\n            el.goToSlide(pagerIndex, 'prev');\n        };\n\n        /**\n         * Starts the auto show\n         *\n         * @param preventControlUpdate (boolean)\n         *  - if true, auto controls state will not be updated\n         */\n        el.startAuto = function (preventControlUpdate) {\n            // if an interval already exists, disregard call\n            if (slider.interval) {\n                return;\n            }\n            // create an interval\n            slider.interval = setInterval(function () {\n                if (slider.settings.autoDirection === 'next') {\n                    el.goToNextSlide();\n                } else {\n                    el.goToPrevSlide();\n                }\n            }, slider.settings.pause);\n            // if auto controls are displayed and preventControlUpdate is not true\n            if (slider.settings.autoControls && preventControlUpdate !== true) {\n                updateAutoControls('stop');\n            }\n        };\n\n        /**\n         * Stops the auto show\n         *\n         * @param preventControlUpdate (boolean)\n         *  - if true, auto controls state will not be updated\n         */\n        el.stopAuto = function (preventControlUpdate) {\n            // if no interval exists, disregard call\n            if (!slider.interval) {\n                return;\n            }\n            // clear the interval\n            clearInterval(slider.interval);\n            slider.interval = null;\n            // if auto controls are displayed and preventControlUpdate is not true\n            if (slider.settings.autoControls && preventControlUpdate !== true) {\n                updateAutoControls('start');\n            }\n        };\n\n        /**\n         * Returns current slide index (zero-based)\n         */\n        el.getCurrentSlide = function () {\n            return slider.active.index;\n        };\n\n        /**\n         * Returns current slide element\n         */\n        el.getCurrentSlideElement = function () {\n            return slider.children.eq(slider.active.index);\n        };\n\n        /**\n         * Returns a slide element\n         * @param index (int)\n         *  - The index (zero-based) of the element you want returned.\n         */\n        el.getSlideElement = function (index) {\n            return slider.children.eq(index);\n        };\n\n        /**\n         * Returns number of slides in show\n         */\n        el.getSlideCount = function () {\n            return slider.children.length;\n        };\n\n        /**\n         * Return slider.working variable\n         */\n        el.isWorking = function () {\n            return slider.working;\n        };\n\n        /**\n         * Update all dynamic slider elements\n         */\n        el.redrawSlider = function () {\n            // resize all children in ratio to new screen size\n            slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());\n            // adjust the height\n            slider.viewport.css('height', getViewportHeight());\n            // update the slide position\n            if (!slider.settings.ticker) {\n                setSlidePosition();\n            }\n            // if active.last was true before the screen resize, we want\n            // to keep it last no matter what screen size we end on\n            if (slider.active.last) {\n                slider.active.index = getPagerQty() - 1;\n            }\n            // if the active index (page) no longer exists due to the resize, simply set the index as last\n            if (slider.active.index >= getPagerQty()) {\n                slider.active.last = true;\n            }\n            // if a pager is being displayed and a custom pager is not being used, update it\n            if (slider.settings.pager && !slider.settings.pagerCustom) {\n                populatePager();\n                updatePagerActive(slider.active.index);\n            }\n            if (slider.settings.ariaHidden) {\n                applyAriaHiddenAttributes(slider.active.index * getMoveBy());\n            }\n        };\n\n        /**\n         * Destroy the current instance of the slider (revert everything back to original state)\n         */\n        el.destroySlider = function () {\n            // don't do anything if slider has already been destroyed\n            if (!slider.initialized) {\n                return;\n            }\n            slider.initialized = false;\n            $('.bx-clone', this).remove();\n            slider.children.each(function () {\n                if ($(this).data('origStyle') !== undefined) {\n                    $(this).attr('style', $(this).data('origStyle'));\n                } else {\n                    $(this).removeAttr('style');\n                }\n            });\n            if ($(this).data('origStyle') !== undefined) {\n                this.attr('style', $(this).data('origStyle'));\n            } else {\n                $(this).removeAttr('style');\n            }\n            $(this).unwrap().unwrap();\n            if (slider.controls.el) {\n                slider.controls.el.remove();\n            }\n            if (slider.controls.next) {\n                slider.controls.next.remove();\n            }\n            if (slider.controls.prev) {\n                slider.controls.prev.remove();\n            }\n            if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) {\n                slider.pagerEl.remove();\n            }\n            $('.bx-caption', this).remove();\n            if (slider.controls.autoEl) {\n                slider.controls.autoEl.remove();\n            }\n            clearInterval(slider.interval);\n            if (slider.settings.responsive) {\n                $(window).unbind('resize', resizeWindow);\n            }\n            if (slider.settings.keyboardEnabled) {\n                $(document).unbind('keydown', keyPress);\n            }\n            //remove self reference in data\n            $(this).removeData('bxSlider');\n        };\n\n        /**\n         * Reload the slider (revert all DOM changes, and re-initialize)\n         */\n        el.reloadSlider = function (settings) {\n            if (settings !== undefined) {\n                options = settings;\n            }\n            el.destroySlider();\n            init();\n            //store reference to self in order to access public functions later\n            $(el).data('bxSlider', this);\n        };\n\n        init();\n\n        $(el).data('bxSlider', this);\n\n        // returns the current jQuery object\n        return this;\n    };\n\n})(jQuery);","/*\n A simple jQuery modal (http://github.com/kylefox/jquery-modal)\n Version 0.6.0\n */\n(function ($) {\n\n    var current = null;\n\n    $.modal = function (el, options) {\n        $.modal.close(); // Close any open modals.\n        var remove, target;\n        this.$body = $('body');\n        this.options = $.extend({}, $.modal.defaults, options);\n        this.options.doFade = !isNaN(parseInt(this.options.fadeDuration, 10));\n        if (el.is('a')) {\n            target = el.attr('href');\n            //Select element by id from href\n            if (/^#/.test(target)) {\n                this.$elm = $(target);\n                if (this.$elm.length !== 1) {\n                    return null\n                }\n                this.$body.append(this.$elm);\n                this.open();\n                //AJAX\n            } else {\n                this.$elm = $('<div>');\n                this.$body.append(this.$elm);\n                remove = function (event, modal) {\n                    modal.elm.remove();\n                };\n                this.showSpinner();\n                el.trigger($.modal.AJAX_SEND);\n                $.get(target).done(function (html) {\n                    if (!current) return;\n                    el.trigger($.modal.AJAX_SUCCESS);\n                    current.$elm.empty().append(html).on($.modal.CLOSE, remove);\n                    current.hideSpinner();\n                    current.open();\n                    el.trigger($.modal.AJAX_COMPLETE);\n                }).fail(function () {\n                    el.trigger($.modal.AJAX_FAIL);\n                    current.hideSpinner();\n                    el.trigger($.modal.AJAX_COMPLETE);\n                });\n            }\n        } else {\n            this.$elm = el;\n            this.$body.append(this.$elm);\n            this.open();\n        }\n    };\n\n    $.modal.prototype = {\n        constructor: $.modal,\n\n        open: function () {\n            var m = this;\n            if (this.options.doFade) {\n                this.block();\n                setTimeout(function () {\n                    m.show();\n                }, this.options.fadeDuration * this.options.fadeDelay);\n            } else {\n                this.block();\n                this.show();\n            }\n            if (this.options.escapeClose) {\n                $(document).on('keydown.modal', function (event) {\n                    if (event.which === 27) $.modal.close();\n                });\n            }\n            if (this.options.clickClose) this.blocker.click(function (e) {\n                if (e.target === this)\n                    $.modal.close();\n            });\n        },\n\n        close: function () {\n            this.unblock();\n            this.hide();\n            $(document).off('keydown.modal');\n        },\n\n        block: function () {\n            this.$elm.trigger($.modal.BEFORE_BLOCK, [this._ctx()]);\n            this.blocker = $('<div class=\"jquery-modal blocker\"></div>');\n            this.$body.css('overflow', 'hidden');\n            this.$body.append(this.blocker);\n            if (this.options.doFade) {\n                this.blocker.css('opacity', 0).animate({opacity: 1}, this.options.fadeDuration);\n            }\n            this.$elm.trigger($.modal.BLOCK, [this._ctx()]);\n        },\n\n        unblock: function () {\n            if (this.options.doFade) {\n                var self = this;\n                this.blocker.fadeOut(this.options.fadeDuration, function () {\n                    self.blocker.children().appendTo(self.$body);\n                    self.blocker.remove();\n                    self.$body.css('overflow', '');\n                });\n            } else {\n                this.blocker.children().appendTo(this.$body);\n                this.blocker.remove();\n                this.$body.css('overflow', '');\n            }\n        },\n\n        show: function () {\n            this.$elm.trigger($.modal.BEFORE_OPEN, [this._ctx()]);\n            if (this.options.showClose) {\n                this.closeButton = $('<a href=\"#close-modal\" rel=\"modal:close\" class=\"close-modal ' + this.options.closeClass + '\">' + this.options.closeText + '</a>');\n                this.$elm.append(this.closeButton);\n            }\n            this.$elm.addClass(this.options.modalClass + ' current');\n            this.$elm.appendTo(this.blocker);\n            if (this.options.doFade) {\n                this.$elm.css('opacity', 0).animate({opacity: 1}, this.options.fadeDuration);\n            } else {\n                this.$elm.show();\n            }\n            this.$elm.trigger($.modal.OPEN, [this._ctx()]);\n        },\n\n        hide: function () {\n            this.$elm.trigger($.modal.BEFORE_CLOSE, [this._ctx()]);\n            if (this.closeButton) this.closeButton.remove();\n            this.$elm.removeClass('current');\n\n            var _this = this;\n            if (this.options.doFade) {\n                this.$elm.fadeOut(this.options.fadeDuration, function () {\n                    _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);\n                });\n            } else {\n                this.$elm.hide(0, function () {\n                    _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);\n                });\n            }\n            this.$elm.trigger($.modal.CLOSE, [this._ctx()]);\n        },\n\n        showSpinner: function () {\n            if (!this.options.showSpinner) return;\n            this.spinner = this.spinner || $('<div class=\"' + this.options.modalClass + '-spinner\"></div>')\n                    .append(this.options.spinnerHtml);\n            this.$body.append(this.spinner);\n            this.spinner.show();\n        },\n\n        hideSpinner: function () {\n            if (this.spinner) this.spinner.remove();\n        },\n\n        //Return context for custom events\n        _ctx: function () {\n            return {elm: this.$elm, blocker: this.blocker, options: this.options};\n        }\n    };\n\n    $.modal.close = function (event) {\n        if (!current) return;\n        if (event) event.preventDefault();\n        current.close();\n        var that = current.$elm;\n        current = null;\n        return that;\n    };\n\n    // Returns if there currently is an active modal\n    $.modal.isActive = function () {\n        return current ? true : false;\n    };\n\n    $.modal.defaults = {\n        escapeClose: true,\n        clickClose: true,\n        closeText: 'Close',\n        closeClass: '',\n        modalClass: \"modal\",\n        spinnerHtml: null,\n        showSpinner: true,\n        showClose: true,\n        fadeDuration: null,   // Number of milliseconds the fade animation takes.\n        fadeDelay: 1.0        // Point during the overlay's fade-in that the modal begins to fade in (.5 = 50%, 1.5 = 150%, etc.)\n    };\n\n    // Event constants\n    $.modal.BEFORE_BLOCK = 'modal:before-block';\n    $.modal.BLOCK = 'modal:block';\n    $.modal.BEFORE_OPEN = 'modal:before-open';\n    $.modal.OPEN = 'modal:open';\n    $.modal.BEFORE_CLOSE = 'modal:before-close';\n    $.modal.CLOSE = 'modal:close';\n    $.modal.AFTER_CLOSE = 'modal:after-close';\n    $.modal.AJAX_SEND = 'modal:ajax:send';\n    $.modal.AJAX_SUCCESS = 'modal:ajax:success';\n    $.modal.AJAX_FAIL = 'modal:ajax:fail';\n    $.modal.AJAX_COMPLETE = 'modal:ajax:complete';\n\n    $.fn.modal = function (options) {\n        if (this.length === 1) {\n            current = new $.modal(this, options);\n        }\n        return this;\n    };\n\n    // Automatically bind links with rel=\"modal:close\" to, well, close the modal.\n    $(document).on('click.modal', 'a[rel=\"modal:close\"]', $.modal.close);\n    $(document).on('click.modal', 'a[rel=\"modal:open\"]', function (event) {\n        event.preventDefault();\n        $(this).modal();\n    });\n})(jQuery);\n","/*global jQuery */\n/*!\n * jQuery Scrollbox\n * (c) 2009-2013 Hunter Wu <hunter.wu@gmail.com>\n * MIT Licensed.\n *\n * http://github.com/wmh/jquery-scrollbox\n */\n\n(function ($) {\n\n    $.fn.scrollbox = function (config) {\n        //default config\n        var defConfig = {\n            linear: false,          // Scroll method\n            startDelay: 2,          // Start delay (in seconds)\n            delay: 3,               // Delay after each scroll event (in seconds)\n            step: 5,                // Distance of each single step (in pixels)\n            speed: 32,              // Delay after each single step (in milliseconds)\n            switchItems: 1,         // Items to switch after each scroll event\n            direction: 'vertical',\n            distance: 'auto',\n            autoPlay: true,\n            onMouseOverPause: true,\n            paused: false,\n            queue: null,\n            listElement: 'ul',\n            listItemElement: 'li'\n        };\n        config = $.extend(defConfig, config);\n        config.scrollOffset = config.direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n        if (config.queue) {\n            config.queue = $('#' + config.queue);\n        }\n\n        return this.each(function () {\n            var container = $(this),\n                containerUL,\n                scrollingId = null,\n                nextScrollId = null,\n                paused = false,\n                backward,\n                forward,\n                resetClock,\n                scrollForward,\n                scrollBackward,\n                forwardHover,\n                pauseHover;\n\n            if (config.onMouseOverPause) {\n                container.bind('mouseover', function () {\n                    paused = true;\n                });\n                container.bind('mouseout', function () {\n                    paused = false;\n                });\n            }\n            containerUL = container.children(config.listElement + ':first-child');\n\n            scrollForward = function () {\n                if (paused) {\n                    return;\n                }\n                var curLi,\n                    i,\n                    newScrollOffset,\n                    scrollDistance,\n                    theStep;\n\n                curLi = containerUL.children(config.listItemElement + ':first-child');\n\n                scrollDistance = config.distance !== 'auto' ? config.distance :\n                    config.direction === 'vertical' ? curLi.outerHeight(true) : curLi.outerWidth(true);\n\n                // offset\n                if (!config.linear) {\n                    theStep = Math.max(3, parseInt((scrollDistance - container[0][config.scrollOffset]) * 0.3, 10));\n                    newScrollOffset = Math.min(container[0][config.scrollOffset] + theStep, scrollDistance);\n                } else {\n                    newScrollOffset = Math.min(container[0][config.scrollOffset] + config.step, scrollDistance);\n                }\n                container[0][config.scrollOffset] = newScrollOffset;\n\n                if (newScrollOffset >= scrollDistance) {\n                    for (i = 0; i < config.switchItems; i++) {\n                        if (config.queue && config.queue.find(config.listItemElement).length > 0) {\n                            containerUL.append(config.queue.find(config.listItemElement)[0]);\n                            containerUL.children(config.listItemElement + ':first-child').remove();\n                        } else {\n                            containerUL.append(containerUL.children(config.listItemElement + ':first-child'));\n                        }\n                    }\n                    container[0][config.scrollOffset] = 0;\n                    clearInterval(scrollingId);\n                    if (config.autoPlay) {\n                        nextScrollId = setTimeout(forward, config.delay * 1000);\n                    }\n                }\n            };\n\n            // Backward\n            // 1. If forwarding, then reverse\n            // 2. If stoping, then backward once\n            scrollBackward = function () {\n                if (paused) {\n                    return;\n                }\n                var curLi,\n                    i,\n                    liLen,\n                    newScrollOffset,\n                    scrollDistance,\n                    theStep;\n\n                // init\n                if (container[0][config.scrollOffset] === 0) {\n                    liLen = containerUL.children(config.listItemElement).length;\n                    for (i = 0; i < config.switchItems; i++) {\n                        containerUL.children(config.listItemElement + ':last-child').insertBefore(containerUL.children(config.listItemElement + ':first-child'));\n                    }\n\n                    curLi = containerUL.children(config.listItemElement + ':first-child');\n                    scrollDistance = config.distance !== 'auto' ?\n                        config.distance :\n                        config.direction === 'vertical' ? curLi.height() : curLi.width();\n                    container[0][config.scrollOffset] = scrollDistance;\n                }\n\n                // new offset\n                if (!config.linear) {\n                    theStep = Math.max(3, parseInt(container[0][config.scrollOffset] * 0.3, 10));\n                    newScrollOffset = Math.max(container[0][config.scrollOffset] - theStep, 0);\n                } else {\n                    newScrollOffset = Math.max(container[0][config.scrollOffset] - config.step, 0);\n                }\n                container[0][config.scrollOffset] = newScrollOffset;\n\n                if (newScrollOffset === 0) {\n                    clearInterval(scrollingId);\n                    if (config.autoPlay) {\n                        nextScrollId = setTimeout(forward, config.delay * 1000);\n                    }\n                }\n            };\n\n            forward = function () {\n                clearInterval(scrollingId);\n                scrollingId = setInterval(scrollForward, config.speed);\n            };\n\n            // Implements mouseover function.\n            forwardHover = function () {\n                config.autoPlay = true;\n                paused = false;\n                clearInterval(scrollingId);\n                scrollingId = setInterval(scrollForward, config.speed);\n            };\n            pauseHover = function () {\n                paused = true;\n            };\n\n            backward = function () {\n                clearInterval(scrollingId);\n                scrollingId = setInterval(scrollBackward, config.speed);\n            };\n\n            resetClock = function (delay) {\n                config.delay = delay || config.delay;\n                clearTimeout(nextScrollId);\n                if (config.autoPlay) {\n                    nextScrollId = setTimeout(forward, config.delay * 1000);\n                }\n            };\n\n            if (config.autoPlay) {\n                nextScrollId = setTimeout(forward, config.startDelay * 1000);\n            }\n\n            // bind events for container\n            container.bind('resetClock', function (delay) {\n                resetClock(delay);\n            });\n            container.bind('forward', function () {\n                clearTimeout(nextScrollId);\n                forward();\n            });\n            container.bind('pauseHover', function () {\n                pauseHover();\n            });\n            container.bind('forwardHover', function () {\n                forwardHover();\n            });\n            container.bind('backward', function () {\n                clearTimeout(nextScrollId);\n                backward();\n            });\n            container.bind('speedUp', function (speed) {\n                if (typeof speed === 'undefined') {\n                    speed = Math.max(1, parseInt(config.speed / 2, 10));\n                }\n                config.speed = speed;\n            });\n\n            container.bind('speedDown', function (speed) {\n                if (typeof speed === 'undefined') {\n                    speed = config.speed * 2;\n                }\n                config.speed = speed;\n            });\n\n            container.bind('updateConfig', function (event, options) {\n                config = $.extend(config, options);\n            });\n\n        });\n    };\n\n}(jQuery));\n"],"sourceRoot":"assets/scripts/"}